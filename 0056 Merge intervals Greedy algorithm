class Solution {
public:
    vector<vector<int>> merge(vector<vector<int>>& intervals) {
        if(intervals.empty()) return vector<vector<int>> {};
        vector<vector<int>> ans;
        //sort(intervals.begin(), intervals.end(), [](const vector<int>& lhs, const vector<int>& rhs){return lhs[0] < rhs[0];} );
        sort(intervals.begin(), intervals.end());

        for(int i = 0; i < intervals.size(); i++) {
            if( ans.empty() || intervals[i][0] > ans.back()[1] ) ans.emplace_back(intervals[i]);
            //else if(ans.back()[1] >= intervals[i][0] ) ans.back()[1] = max(ans.back()[1], intervals[i][1]);
            else ans.back()[1] = max(ans.back()[1], intervals[i][1]);
        }

        return ans;
    }
};
