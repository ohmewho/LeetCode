class Solution {
public:
    vector<int> searchRange(vector<int>& nums, int target) {
        int n = nums.size(), lower, upper;
        int left = 0, right = n - 1, mid;

        while(left <= right) {

            mid = left + (right - left) / 2;


            if(nums[mid] >= target) right = mid - 1;
            else if(nums[mid] < target) left = mid + 1;
        }
        //printf("left = %d\n", left);

        if( left == n || nums[left] != target ) lower = -1;
        else lower = left;

        left = 0, right = n - 1;
        while( left <= right ) {
            mid = left + (right - left) / 2;

            if(nums[mid] <= target) left = mid + 1;
            else if(nums[mid] > target) right = mid - 1;
        }

        if(right < 0 || nums[right] != target) upper = -1;
        else upper = right;

        vector<int> ans = {lower, upper};

        return ans;

    }
};
