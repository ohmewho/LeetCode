class Solution {
public:
    int solve(vector<string>& A) {
        unordered_set<string> st;
        for(auto word: A) {
            string odd = "", even = "";
            for(int i = 0; i < (int) word.size(); i++) {
                if(i % 2) odd += word[i];
                else even += word[i];
            }
            sort(odd.begin(), odd.end());
            sort(even.begin(), even.end());
            st.emplace(odd + even);
        }
        return st.size();
    }
    
    int numSpecialEquivGroups(vector<string>& A) {
        return solve(A);
    }
};
