/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getLen(ListNode* head) {
        int ans = 0;
        while(head) {
            ans++;
            head = head->next;
        }
        return ans;
    }

    TreeNode* buildTree(ListNode*& head, int left, int right) {
        if(left > right) return nullptr;

        int mid = (left + right + 1) / 2;
        TreeNode* tn = new TreeNode();

        tn->left = buildTree(head, left, mid - 1);
        tn->val = head->val;
        head = head->next;

        tn->right = buildTree(head, mid + 1, right);

        return tn;
    }

    TreeNode* buildBST(ListNode* head) {
        int len = getLen(head);
        return buildTree(head, 0, len - 1);
    }

    TreeNode* sortedListToBST(ListNode* head) {
    
        return buildBST(head);
    }
};
