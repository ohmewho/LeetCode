/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
const int N = 1000;
int tier[26] = {1, 0, 0, 1, 2, 1, 1, 1, 2, 1, 1, 1, 0, 0, 2, 2, 2, 2, 1, 2, 2, 0, 2, 0, 2, 0};

void printArrs() {
    for(int i = 0; i < 26; i++) {
        if(i) printf(" ");
        printf("%d%c", tier[i], i + 'a');
    }
    printf("\n");
}
char ** findWords(char ** words, int wordsSize, int* returnSize){

    char** ans = (char**)malloc(sizeof(char*) * N);
    printArrs();

    *returnSize = 0;

    for(int i = 0 ; i < wordsSize; i++) {
        int len = strlen(words[i]);
        char ch = words[i][0];
        if(ch >= 'A' && ch <= 'Z') ch += 'a' - 'A';
        int sameRow = 1, row = tier[ch - 'a'];
        for(int j = 1; j < len; j++) {
            char c = words[i][j];
            printf("%c", c);
            if(c >= 'A' && c <= 'Z') c += 'a' - 'A';
            if( tier[c - 'a'] != row) {
                sameRow = 0;
                break;
            }
        }
        if(sameRow) ans[(*returnSize)++] = words[i];
    }

    return ans;
}
