class Solution {
public:
    // bool comp(const vector<int>& a, const vector<int>& b) {

    //     return a[1] < b[1];
    // }

    struct compare{
        bool operator() (const vector<int>& u, const vector<int> &v){
            return u[1] < v[1];
        }
    };


    int eraseOverlapIntervals(vector<vector<int>>& intervals) {

        int n = intervals.size();
        if(n == 0) return 0;
        sort(intervals.begin(), intervals.end(), compare());

        // for(int i = 0; i < intervals.size(); i++) {
        //     printf("%d %d\n", intervals[i][0], intervals[i][1]);
        // }

        int right = intervals[0][1], nonoverlaps = 1;
        for(int i = 1; i < n; i++) {

            if(intervals[i][0] >= right) {
                right = intervals[i][1];
                nonoverlaps++;
            }
        }

        return n - nonoverlaps;
    }
};
