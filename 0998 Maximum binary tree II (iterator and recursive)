/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:

    TreeNode* iterate(TreeNode* root, int val) {
        TreeNode* dummy = new TreeNode(0);
        dummy->right = root;

        TreeNode* prev = dummy, * curr = root;
        while( curr && curr->val > val ) {
            prev = curr;
            curr = curr->right;
        }

        TreeNode* newNode = new TreeNode(val);

        prev->right = newNode;
        newNode->left = curr; 
        return dummy->right;               
    }

    TreeNode* recursive(TreeNode* root, int val) {
        if(!root) return new TreeNode(val);
        if(root->val < val) {
            TreeNode* newNode = new TreeNode(val);
            newNode->left = root;
            return newNode;
        }

        root->right = recursive(root->right, val);
        return root;
    }
    TreeNode* insertIntoMaxTree(TreeNode* root, int val) {

        //return iterate(root, val);
        return recursive(root, val);
    }
};
