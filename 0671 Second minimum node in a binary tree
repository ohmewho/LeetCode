/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int helper(TreeNode* root, int val) {
        if(!root) return -1;

        if(root->val > val) return root->val;

        int left = helper(root->left, val);
        int right = helper(root->right, val);

        if(left == -1) return right;
        if(right == -1) return left;

        return min(left, right);

    }
    int solve(TreeNode* root) {
        return helper(root, root->val);
    }

    int findSecondMinimumValue(TreeNode* root) {
        return solve(root);
    }
};
