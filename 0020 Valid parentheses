char getMatch(char ch) {
    char ans;
    if(ch == '(') ans = ')';
    else if(ch == '{') ans = '}';
    else if(ch == '[') ans = ']';
    return ans;
}

bool isLeft(char ch) {
    return (ch == '(' || ch == '{' || ch == '[');
}

bool isValid(char * s){
    int n = strlen(s);

    if(!n) return true;

    char *stack = (char*)malloc( n * sizeof(char));
    int top = -1;
    for(int i = 0; i < n; i++) {
        if( isLeft(s[i])) {
            stack[++top] = s[i];
            printf("%d stacktop is %c\n", top, stack[top]);
        }
        
        else {
            //printf("%c\n", getMatch(stack[top]));
            if(top == -1) return false;

            if( getMatch(stack[top]) == s[i]) top--;
            else return false;
        }
    }
    printf("%d\n", top);
    return top == -1;
}
