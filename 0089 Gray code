class Solution {
public:
    vector<int> recursion(int n) {
        vector<int> ans{0};

        int mask = 1;
        for(int i = 0; i < n; i++) {
            int size = ans.size();
            for(int j = size - 1; j >= 0; j--) {
                ans.emplace_back(ans[j] ^ mask);
            }
            mask <<= 1;
        }

        return ans;
    }

    vector<int> bitwise(int n) {
        vector<int> ans;

        for(int i = 0; i < (1 << n); i++) {
            ans.emplace_back(i ^ (i >> 1));
        }
        
        //for(int a: ans) printf(" %d ", a);
        return ans;
    }
    vector<int> grayCode(int n) {

        return bitwise(n);
        //return recursion(n);
    }
};
