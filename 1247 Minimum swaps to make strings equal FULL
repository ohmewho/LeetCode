class Solution {
public:
    void printVec(vector<int> vec) {
        int i = 0;
        for(int n: vec) {
            if(i) printf(" ");
            printf("%d", n);
            i++;
        }
        printf("\n");
    }

    int minimumSwap(string s1, string s2) {

        string s1_alias, s2_alias;
        int n = s1.length(), diff, minus = 0, plus = 0;
        for(int i = 0; i < n; i++) {
            if(s1[i] - s2[i] < 0) minus++;
            else if(s1[i] > s2[i]) plus++;   
        }

        int ans;
        //int rems = minus % 2 - plus % 2;

        if(minus % 2 - plus % 2) ans = -1;
        else ans = minus / 2 + plus / 2 + 2 * (minus % 2);

        return ans;
    }
};

string stringToString(string input) {
    assert(input.length() >= 2);
    string result;
    for (int i = 1; i < input.length() -1; i++) {
        char currentChar = input[i];
        if (input[i] == '\\') {
            char nextChar = input[i+1];
            switch (nextChar) {
                case '\"': result.push_back('\"'); break;
                case '/' : result.push_back('/'); break;
                case '\\': result.push_back('\\'); break;
                case 'b' : result.push_back('\b'); break;
                case 'f' : result.push_back('\f'); break;
                case 'r' : result.push_back('\r'); break;
                case 'n' : result.push_back('\n'); break;
                case 't' : result.push_back('\t'); break;
                default: break;
            }
            i++;
        } else {
          result.push_back(currentChar);
        }
    }
    return result;
}

int main() {
    string line;
    while (getline(cin, line)) {
        string s1 = stringToString(line);
        getline(cin, line);
        string s2 = stringToString(line);
        
        int ret = Solution().minimumSwap(s1, s2);

        string out = to_string(ret);
        cout << out << endl;
    }
    return 0;
}
