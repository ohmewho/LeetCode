class Solution {
public:
    int minPathSum(vector<vector<int>>& grid) {
        const int M = grid.size(), N = grid[0].size();
        //printf("%d %d\n", M, N);
        int dp[N];
        
        for(int col = 0; col < N; col++) {
            if(col == 0) dp[col] = grid[0][col];
            else dp[col] = dp[col - 1] + grid[0][col];
        }
        for(int i = 1; i < M; i++) {
            for(int j = 0; j < N; j++) {

                if( j == 0 ) dp[j] = dp[j] + grid[i][j];
                else dp[j] = min(dp[j - 1], dp[j]) + grid[i][j];

            }
        }
        return dp[N - 1];
    }
};
