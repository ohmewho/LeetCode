/*
// Definition for a Node.
class Node {
public:
    int val;
    vector<Node*> children;

    Node() {}

    Node(int _val) {
        val = _val;
    }

    Node(int _val, vector<Node*> _children) {
        val = _val;
        children = _children;
    }
};
*/

class Solution {
public:
    vector<int> postorder(Node* root) {
        vector<int> ans;
        if(!root) return ans;

        Node* stack[1000];
        int top = -1;
        stack[++top] = root;

        while(top > -1) {

            Node* t = stack[top--];
            ans.push_back(t->val);
            
            //printf("size = %d\n", t->children.size());
            for(int i = 0; i < t->children.size(); i++) {
                //printf("i = %d, child = %d\n", i, t->children[i]->val);
                stack[++top] = t->children[i];
            }
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
};
