/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     struct TreeNode *left;
 *     struct TreeNode *right;
 * };
 */
 const int N = 100000;
typedef struct TreeNode* Tree;

int bfs(Tree t) {
    if(!t) return 0;
    Tree Queue[N];
    int front = 0, rear = 0, rear_alias, min_depth = N, depth = 1;
    Queue[rear++] = t;

    while(front != rear) {

        rear_alias = rear;
        while(front != rear_alias) {
            Tree cur = Queue[front++];
            if(!cur) min_depth = depth;
            if(cur->left) Queue[rear++] = cur->left;
            if(cur->right) Queue[rear++] = cur->right;
            if(!(cur->left) && !(cur->right)) {
                if(depth < min_depth) min_depth = depth;
            }
        }
        depth++;
    }
    return min_depth;
}

int minDepth(struct TreeNode* root){
    return bfs(root);
}
