class Solution {
public:
    vector<vector<int>> insert(vector<vector<int>>& intervals, vector<int>& newInterval) {
        int n = intervals.size();
        vector<vector<int>> ans;
        vector<int> merged = vector<int> (newInterval);

        bool placed = false;
        for(int i = 0; i < n; i++) {
            if( intervals[i][1] < merged[0] ) ans.emplace_back(intervals[i]);
            else { // merged[0] <= intervals[i][1]
                merged[0] = min(intervals[i][0], merged[0]);
            }

            if( !placed ) {
                if( intervals[i][0] > merged[1] ) {
                    placed = true;
                    ans.emplace_back(merged);
                    ans.emplace_back(intervals[i]);
                }
                else merged[1] = max(merged[1], intervals[i][1]);
            }
            
            else ans.emplace_back(intervals[i]);
            
        }
        if( !placed ) ans.emplace_back(merged);

        return ans;
    }
};
