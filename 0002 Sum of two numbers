/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {
        ListNode* ans = nullptr, *newnode, *tail;

        ListNode *p = l1, *q = l2;
        int carry = 0;
        while(p || q) {

            int m = p? p->val: 0, n = q? q->val: 0 ;
            int sum = m + n + carry;
            //printf("%d %d\n", m, n);

            if(!ans) ans = tail =  new ListNode(sum % 10);
            else {
                tail->next = new ListNode(sum % 10);
                tail = tail->next;
            }

            carry = sum / 10;
            
            if(p)p = p->next;
            if(q)q = q->next;
        }

        if(carry) {
            
            tail->next = new ListNode(carry);
        }

        return ans;
    }
};
