class Solution {
public:
    double myPow(double x, int n) {
        if(!x) return 0;
        
        int alias = n;
        double ans = 1.0, cur = x;
        while(alias) {
            if(alias % 2 != 0) ans *= cur;

            cur *= cur;
            alias /= 2;
        }

        if(n < 0) ans = 1.0 / ans;
        return ans;
    }
};

// class Solution {
// public:
//     double quickMul(double x, long long n) {
//         if(!n) return 1.0;

//         double y = quickMul(x, n / 2 );
//         if( n % 2 == 0) return y * y;
//         else return y * y * x;
//     }

//     double myPow(double x, int n) {
//         long long alias = n;

//         if(alias < 0) return 1.0 / quickMul(x, -alias);
//         else return quickMul(x, alias);
//     }
// };
