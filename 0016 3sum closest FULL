class Solution {
public:
    int threeSumClosest(vector<int>& nums, int target) {
        int ans, n = nums.size(), sum, mindiff = 10001;

        sort(nums.begin(), nums.end());

        // for(int n: nums) {
        //     printf(" %d ", n);
        // }
        // printf("\n");

        for(int i = 0; i < n - 2; i++) {
            if(i > 0 && nums[i] == nums[i - 1]) continue;

            int j = i + 1, k = n - 1;

            while(j < k) {

                sum = nums[i] + nums[j] + nums[k];
                if(abs(sum - target) < mindiff) {
                    mindiff = abs(sum - target);
                    if(mindiff == 0) return target;
                    ans = sum;
                }  

                if(sum > target) {
                    int _k = k - 1;
                    while(_k > j && nums[_k] == nums[k]) _k--;
                    k = _k;
                }

                else {
                    int _j = j + 1;
                    while(_j < k && nums[_j] == nums[j]) _j++;
                    j = _j;
                }              
            }
        }

        return ans;
    }
};

void trimLeftTrailingSpaces(string &input) {
    input.erase(input.begin(), find_if(input.begin(), input.end(), [](int ch) {
        return !isspace(ch);
    }));
}

void trimRightTrailingSpaces(string &input) {
    input.erase(find_if(input.rbegin(), input.rend(), [](int ch) {
        return !isspace(ch);
    }).base(), input.end());
}

vector<int> stringToIntegerVector(string input) {
    vector<int> output;
    trimLeftTrailingSpaces(input);
    trimRightTrailingSpaces(input);
    input = input.substr(1, input.length() - 2);
    stringstream ss;
    ss.str(input);
    string item;
    char delim = ',';
    while (getline(ss, item, delim)) {
        output.push_back(stoi(item));
    }
    return output;
}

int stringToInteger(string input) {
    return stoi(input);
}

int main() {
    string line;
    while (getline(cin, line)) {
        vector<int> nums = stringToIntegerVector(line);
        getline(cin, line);
        int target = stringToInteger(line);
        
        int ret = Solution().threeSumClosest(nums, target);

        string out = to_string(ret);
        cout << out << endl;
    }
    return 0;
}
