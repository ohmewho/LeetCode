char * minWindow(char * s, char * t){
    int charsneeded[128] = {0}, charspresent[128] = {0};

    int lent = strlen(t), charsttl = 0;

    for(int i = 0; i < lent; i++) {
        if(charsneeded[t[i]] == 0) charsttl++;
        charsneeded[t[i]]++;
    }

    int l = 0, r = 0, start = -1, minLen = 100001;
    while(r < strlen(s)) {

        while(r < strlen(s) && charsttl > 0) {
            if(++charspresent[s[r]] == charsneeded[s[r]]) charsttl--;
            r++;
        }

        while(charsttl == 0) {

            if(--charspresent[s[l]] < charsneeded[s[l]] ) charsttl++;
            //printf("l = %d, r = %d\n", l, r);
            l++;
        }

        if(r - l + 1 < minLen){
            start = l - 1;
            minLen = fmin(minLen, r - start);
            //printf("start = %d, minLen = %d\n", start, minLen);                    
        }
    }

    char* ans = (char*)malloc( (minLen + 1) * sizeof(char*));
    ans[0] = '\0';
    if(start > -1) {
        
        for(int i = start; i < start + minLen; i++) {
            ans[i - start] = s[i];
        }
        ans[minLen] = '\0';        
    }
