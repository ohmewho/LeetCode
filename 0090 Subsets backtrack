class Solution {
public:
    vector<vector<int>> ans;
    vector<int> curr;

    void backtrack(vector<int>& nums, int start) {
        ans.emplace_back(curr);
        for(int i = start; i < nums.size(); i++) {
            if(i > start && nums[i - 1] == nums[i]) continue;

            curr.emplace_back(nums[i]);
            backtrack(nums, i + 1);
            curr.pop_back();
        }
    }
    vector<vector<int>> subsetsWithDup(vector<int>& nums) {
        sort(nums.begin(), nums.end());
        backtrack(nums, 0);
        return ans;
    }
};
