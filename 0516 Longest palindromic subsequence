class Solution {
public:
    int longestPalindromeSubseq(string s) {
        int n = s.length();
        vector<vector<int>> dp(n, vector<int>(n, 0));

        for(int row = n - 1; row >= 0; row--) {
            dp[row][row] = 1;
            for(int col = row + 1; col < n; col++) {
                if(s[row] == s[col]) dp[row][col] = dp[row + 1][col - 1] + 2;
                else dp[row][col] = max(dp[row + 1][col], dp[row][col - 1]);
            }
        }

        return dp[0][n - 1];
    }
};
