class Solution {
public:
    // void printVec(vector<int> vec) {
    //     int i = 0; 
    //     for(int n: vec) {
    //         if(i) printf(" ");
    //         printf("%d", n);
    //         i++;
    //     }
    //     printf("\n");
    // }

    int findMinFibonacciNumbers(int k) {
        int f1 = 1, f2 = 1;
        vector<int> fibo{f1, f2};

        int fn;
        while(f1 + f2 <= k) {
            fn = f1 + f2;
            fibo.push_back(fn);
            f1 = f2;
            f2 = fn;
        }
        //printVec(fibo);
        int n = fibo.size(), ans = 0, idx = n - 1;

        for(int i = n - 1; i >= 0; i--) {
            if(fibo[i] <= k ) {
                  ans++;
                  k -= fibo[i]; 
            }
        }

        // while(k) {
        //     if(fibo[idx] <= k) {
        //         ans++;
        //         k -= fibo[idx];
        //     }
        //     idx--;
        // }
        return ans;

    }
};

int stringToInteger(string input) {
    return stoi(input);
}

int main() {
    string line;
    while (getline(cin, line)) {
        int k = stringToInteger(line);
        
        int ret = Solution().findMinFibonacciNumbers(k);

        string out = to_string(ret);
        cout << out << endl;
    }
    return 0;
}
