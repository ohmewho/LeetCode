class Solution {
public:
    int search(vector<int>& arr, int target) {
        int n = arr.size();
        int left = 0, right = n - 1, mid;

        while(left <= right) {
            
            if(arr[left] == target) return left;

            mid = left + (right - left) / 2;

            if(arr[mid] == target) right = mid; // the possible range is [left, mid]

            else {
                if(arr[left] > arr[mid]) {
                    if(arr[mid] <= target && target <= arr[right]) left = mid; // a possible range is [mid, right]
                    else right = mid - 1;
                }
                else if(arr[left] < arr[mid]) {
                    if(arr[left] <= target && target <= arr[mid]) right = mid; // the possible range is [left, mid]
                    else left = mid + 1;
                }
                else left++;
            }
        }
        return -1;
    }
};
