class Solution {
public:
    int rob(vector<int>& nums) {
        int n = nums.size();

        if(!n) return 0;
        if(n == 1) return nums[0];
        if( n == 2) return max(nums[0], nums[1]);
               
        int dp[n], maxmoney, i, maxtemp = 0;
        dp[0] = nums[0], dp[1] = max(dp[0], nums[1]);

        maxmoney = dp[1];
        
        for(i = 2; i < n - 1; i++) {
        	dp[i] = max(dp[i - 2] + nums[i], dp[i - 1]);
            maxtemp = max(maxtemp, dp[i]);
		}

        //printf("maxtemp = %d\n", maxtemp);
		maxmoney = max(maxmoney, maxtemp);

		dp[1] = nums[1], dp[2] = max(nums[1], nums[2]);
        maxtemp = dp[2];
		for(i = 3; i < n; i++) {
			dp[i] = max(dp[i - 2] + nums[i], dp[i - 1]);
            maxtemp = max(dp[i], maxtemp);
		}
        maxmoney = max(maxmoney, maxtemp);
        
        return maxmoney;
    }
};
