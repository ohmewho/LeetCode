/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int getHeight(TreeNode* root) {
        if(!root) return 0;

        return max(getHeight(root->left), getHeight(root->right)) + 1;
    }

    bool topdown(TreeNode* root) {
        if(!root) return true;

        return abs(getHeight(root->left) - getHeight(root->right)) < 2 && (topdown(root->left) && topdown(root->right));
    }

    int bottomup(TreeNode* root) {
        if(!root) return 0;

        int left = bottomup(root->left);
        int right = bottomup(root->right);

        if(left == -1 || right == -1 || abs(left - right) > 1) return -1;
        return max(left, right) + 1;
    }
    bool isBalanced(TreeNode* root) {
        //return topdown(root);
        return bottomup(root) >= 0;
    }
};
