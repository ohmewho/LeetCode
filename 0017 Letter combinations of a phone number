class Solution {
public:
    unordered_map<char, string> char2str = {
        {'2', "abc"}, 
        {'3', "def"}, 
        {'4', "ghi"}, 
        {'5', "jkl"}, 
        {'6', "mno"}, 
        {'7', "pqrs"}, 
        {'8', "tuv"}, 
        {'9', "wxyz"}
        };
    
    vector<string> ans;
    string curr = "";

    void backtracking(string digits, int pos) {

        if(pos == digits.length()) {
            ans.emplace_back(curr);
            return;
        }

        for(char ch: char2str[digits[pos]]) {
            curr += ch;
            backtracking(digits, pos + 1);
            curr.pop_back();
        }

    }
    vector<string> letterCombinations(string digits) {
        if(digits.size() == 0) return ans;
        
        backtracking(digits, 0);
        return ans;
    }
};
