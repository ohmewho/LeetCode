class Solution {
public:
    int ans = 0;

    void dfs(vector<vector<int>>& mngr2staff, vector<int>& informTime, int currID, int currTime) {
        vector<int> staffvec = mngr2staff[currID];

        if(staffvec.empty()) {
            ans = max(ans, currTime);
            return;
        }

        currTime += informTime[currID];
        for(int staff: staffvec) dfs(mngr2staff, informTime, staff, currTime);
    }

    int solveit(int n, int headID, vector<int>& manager, vector<int>& informTime) {
        vector<vector<int>> mngr2staff(n); // Don't forget this size n!!

        int size = manager.size();
        for(int i = 0; i < size; i++) {
            if(manager[i] != -1) mngr2staff[manager[i]].emplace_back(i);
        }

        int currTime = 0;
        dfs(mngr2staff, informTime, headID, currTime);

        return ans;
    } 

    int numOfMinutes(int n, int headID, vector<int>& manager, vector<int>& informTime) {
        return solveit(n, headID, manager, informTime);
    }
};
