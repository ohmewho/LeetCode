/**
 * Note: The returned array must be malloced, assume caller calls free().
 */
int* maxSlidingWindow(int* nums, int numsSize, int k, int* returnSize){
    int *ans = (int *)malloc(sizeof(int) * (numsSize - k + 1));
    
    int monoQueue[numsSize];
    int front = 0, rear = 0;

    for(int i = 0; i < k; i++) {
        while(front < rear && nums[i] >= nums[monoQueue[rear - 1]]) rear--;
        monoQueue[rear++] = i;
    }

    *returnSize = 0;
    
    ans[(*returnSize)++] = nums[monoQueue[front]];

    for(int i = k; i < numsSize; i++) {

        while(front < rear && nums[i] >= nums[monoQueue[rear - 1]]) rear--;
        monoQueue[rear++] = i;
        while(monoQueue[front] <= i - k) front++;
        ans[(*returnSize)++] = nums[monoQueue[front]];
    }

    return ans;
}

// int* maxSlidingWindow(int* nums, int numsSize, int k, int* returnSize){
//     int *ans = (int *)malloc(sizeof(int) * (numsSize - k + 1));

//     for(int i = 0; i < numsSize - k + 1; i++) {

//         int curr_max = fmax()
//     }

//     *returnSize = 0;



//     return ans;
// }
