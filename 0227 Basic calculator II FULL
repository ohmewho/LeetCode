class Solution {
public:
    int calculate(string s) {
        int n = s.length(), ans = 0, curr = 0, num = 0;
        char op = '+';

        for(int i = 0; i < n; i++) {
            if( isdigit(s[i]) ) num = num * 10 + ( s[i] - '0');

            if( s[i] == '+' || s[i] == '-' || s[i] == '*' || s[i] == '/' || i == n - 1 ) {
                switch(op) {
                    case '+': 
                        curr += num;
                        break;
                    case '-':
                        curr -= num;
                        break;
                    case '*':
                        curr *= num;
                        break;
                    case '/':
                        curr /= num;
                        break;
                }

                if( s[i] == '+' || s[i] == '-' || i == n - 1 ) {
                    ans += curr;
                    curr = 0;
                }
                
                op = s[i];
                num = 0;
            }
        }

        return ans;
    }
};

string stringToString(string input) {
    assert(input.length() >= 2);
    string result;
    for (int i = 1; i < input.length() -1; i++) {
        char currentChar = input[i];
        if (input[i] == '\\') {
            char nextChar = input[i+1];
            switch (nextChar) {
                case '\"': result.push_back('\"'); break;
                case '/' : result.push_back('/'); break;
                case '\\': result.push_back('\\'); break;
                case 'b' : result.push_back('\b'); break;
                case 'f' : result.push_back('\f'); break;
                case 'r' : result.push_back('\r'); break;
                case 'n' : result.push_back('\n'); break;
                case 't' : result.push_back('\t'); break;
                default: break;
            }
            i++;
        } else {
          result.push_back(currentChar);
        }
    }
    return result;
}

int main() {
    string line;
    while (getline(cin, line)) {
        string s = stringToString(line);
        
        int ret = Solution().calculate(s);

        string out = to_string(ret);
        cout << out << endl;
    }
    return 0;
}
